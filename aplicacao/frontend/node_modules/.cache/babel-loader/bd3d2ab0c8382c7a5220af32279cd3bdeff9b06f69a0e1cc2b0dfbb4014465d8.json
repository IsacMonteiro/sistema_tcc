{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useObraCoorientadorStore = defineStore('obraCoorientador', {\n  state: () => ({\n    obraCoorientadores: []\n  }),\n  actions: {\n    // Função para tratar erros\n    handleError(error) {\n      console.error('Erro:', error.response?.data || error.message);\n    },\n    // Listar todos os registros\n    async listarObraCoorientadores() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/obraCoorientador');\n        this.obraCoorientadores = response.data;\n      } catch (error) {\n        this.handleError(error);\n      }\n    },\n    // Criar relacionamento\n    async cadastrarObraCoorientador(fk_id_obra, fk_id_coorientador) {\n      try {\n        const novoRelacionamento = {\n          fk_id_obra,\n          fk_id_coorientador\n        };\n        const response = await axios.post('http://localhost:3000/api/obraCoorientador', novoRelacionamento);\n        this.obraCoorientadores.push(response.data.result);\n        return {\n          message: 'Relacionamento obra-coorientador criado com sucesso!'\n        };\n      } catch (error) {\n        this.handleError(error);\n        throw error;\n      }\n    },\n    // Excluir relacionamento\n    async excluirObraCoorientador(fk_id_obra, fk_id_coorientador) {\n      try {\n        await axios.delete(`http://localhost:3000/api/obraCoorientador/${fk_id_obra}/${fk_id_coorientador}`);\n        await this.listarObraCoorientadores();\n      } catch (error) {\n        this.handleError(error);\n      }\n    },\n    // Verificar relacionamento existente\n    async verificarRelacionamento(fk_id_obra, fk_id_coorientador) {\n      return this.obraCoorientadores.some(rel => rel.fk_id_obra === fk_id_obra && rel.fk_id_coorientador === fk_id_coorientador);\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useObraCoorientadorStore","state","obraCoorientadores","actions","handleError","error","console","response","data","message","listarObraCoorientadores","get","cadastrarObraCoorientador","fk_id_obra","fk_id_coorientador","novoRelacionamento","post","push","result","excluirObraCoorientador","delete","verificarRelacionamento","some","rel"],"sources":["C:/Users/Micro/Music/sistema_tcc/aplicacao/frontend/src/store/obraCoorientadorStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport axios from 'axios';\r\n\r\nexport const useObraCoorientadorStore = defineStore('obraCoorientador', {\r\n  state: () => ({\r\n    obraCoorientadores: [],\r\n  }),\r\n  actions: {\r\n    // Função para tratar erros\r\n    handleError(error) {\r\n      console.error('Erro:', error.response?.data || error.message);\r\n    },\r\n\r\n    // Listar todos os registros\r\n    async listarObraCoorientadores() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/obraCoorientador');\r\n        this.obraCoorientadores = response.data;\r\n      } catch (error) {\r\n        this.handleError(error);\r\n      }\r\n    },\r\n\r\n    // Criar relacionamento\r\n    async cadastrarObraCoorientador(fk_id_obra, fk_id_coorientador) {\r\n      try {\r\n        const novoRelacionamento = { fk_id_obra, fk_id_coorientador };\r\n        const response = await axios.post('http://localhost:3000/api/obraCoorientador', novoRelacionamento);\r\n        this.obraCoorientadores.push(response.data.result);\r\n        return { message: 'Relacionamento obra-coorientador criado com sucesso!' };\r\n      } catch (error) {\r\n        this.handleError(error);\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    // Excluir relacionamento\r\n    async excluirObraCoorientador(fk_id_obra, fk_id_coorientador) {\r\n      try {\r\n        await axios.delete(`http://localhost:3000/api/obraCoorientador/${fk_id_obra}/${fk_id_coorientador}`);\r\n        await this.listarObraCoorientadores();\r\n      } catch (error) {\r\n        this.handleError(error);\r\n      }\r\n    },\r\n\r\n    // Verificar relacionamento existente\r\n    async verificarRelacionamento(fk_id_obra, fk_id_coorientador) {\r\n      return this.obraCoorientadores.some(\r\n        (rel) => rel.fk_id_obra === fk_id_obra && rel.fk_id_coorientador === fk_id_coorientador\r\n      );\r\n    },\r\n  },\r\n});"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,wBAAwB,GAAGF,WAAW,CAAC,kBAAkB,EAAE;EACtEG,KAAK,EAAEA,CAAA,MAAO;IACZC,kBAAkB,EAAE;EACtB,CAAC,CAAC;EACFC,OAAO,EAAE;IACP;IACAC,WAAWA,CAACC,KAAK,EAAE;MACjBC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACE,QAAQ,EAAEC,IAAI,IAAIH,KAAK,CAACI,OAAO,CAAC;IAC/D,CAAC;IAED;IACA,MAAMC,wBAAwBA,CAAA,EAAG;MAC/B,IAAI;QACF,MAAMH,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAAC,4CAA4C,CAAC;QAC9E,IAAI,CAACT,kBAAkB,GAAGK,QAAQ,CAACC,IAAI;MACzC,CAAC,CAAC,OAAOH,KAAK,EAAE;QACd,IAAI,CAACD,WAAW,CAACC,KAAK,CAAC;MACzB;IACF,CAAC;IAED;IACA,MAAMO,yBAAyBA,CAACC,UAAU,EAAEC,kBAAkB,EAAE;MAC9D,IAAI;QACF,MAAMC,kBAAkB,GAAG;UAAEF,UAAU;UAAEC;QAAmB,CAAC;QAC7D,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAI,CAAC,4CAA4C,EAAED,kBAAkB,CAAC;QACnG,IAAI,CAACb,kBAAkB,CAACe,IAAI,CAACV,QAAQ,CAACC,IAAI,CAACU,MAAM,CAAC;QAClD,OAAO;UAAET,OAAO,EAAE;QAAuD,CAAC;MAC5E,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACd,IAAI,CAACD,WAAW,CAACC,KAAK,CAAC;QACvB,MAAMA,KAAK;MACb;IACF,CAAC;IAED;IACA,MAAMc,uBAAuBA,CAACN,UAAU,EAAEC,kBAAkB,EAAE;MAC5D,IAAI;QACF,MAAMf,KAAK,CAACqB,MAAM,CAAC,8CAA8CP,UAAU,IAAIC,kBAAkB,EAAE,CAAC;QACpG,MAAM,IAAI,CAACJ,wBAAwB,CAAC,CAAC;MACvC,CAAC,CAAC,OAAOL,KAAK,EAAE;QACd,IAAI,CAACD,WAAW,CAACC,KAAK,CAAC;MACzB;IACF,CAAC;IAED;IACA,MAAMgB,uBAAuBA,CAACR,UAAU,EAAEC,kBAAkB,EAAE;MAC5D,OAAO,IAAI,CAACZ,kBAAkB,CAACoB,IAAI,CAChCC,GAAG,IAAKA,GAAG,CAACV,UAAU,KAAKA,UAAU,IAAIU,GAAG,CAACT,kBAAkB,KAAKA,kBACvE,CAAC;IACH;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}