{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      loginFormVisible: false,\n      // Controla a visibilidade do formulário de login\n      valid: false,\n      // Define a validação do formulário\n      loginData: {\n        email: \"\",\n        password: \"\"\n      },\n      // Regras de validação para os campos de e-mail e senha\n      emailRules: [v => !!v || 'E-mail é obrigatório', v => /.+@.+\\..+/.test(v) || 'E-mail inválido'],\n      passwordRules: [v => !!v || 'Senha é obrigatória']\n    };\n  },\n  methods: {\n    toggleLoginForm() {\n      // Alterna a visibilidade do formulário de login\n      this.loginFormVisible = !this.loginFormVisible;\n    },\n    async submitLogin() {\n      // Validar os campos do formulário\n      if (!this.valid) {\n        alert('Por favor, preencha todos os campos corretamente');\n        return;\n      }\n      try {\n        // Enviar dados para o backend\n        const response = await axios.post('http://seu-backend-endpoint/login', this.loginData);\n\n        // Verificar a resposta do servidor\n        if (response.data.success) {\n          // Salvar o token ou dados do usuário, se necessário\n          localStorage.setItem('userToken', response.data.token);\n\n          // Redirecionar para a página de sucesso\n          this.$router.push({\n            name: 'TestePage'\n          });\n\n          // Fechar o formulário de login\n          this.loginFormVisible = false;\n        } else {\n          alert('Credenciais inválidas!');\n        }\n      } catch (error) {\n        console.error('Erro de login:', error);\n        alert('Erro ao conectar com o servidor!');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","loginFormVisible","valid","loginData","email","password","emailRules","v","test","passwordRules","methods","toggleLoginForm","submitLogin","alert","response","post","success","localStorage","setItem","token","$router","push","name","error","console"],"sources":["C:\\Users\\Micro\\Music\\sistema_tcc\\aplicacao\\frontend\\src\\components\\header\\CustomHeader.vue"],"sourcesContent":["<template>\r\n  <v-app-bar flat>\r\n    <!-- Logo e Título -->\r\n    <v-container class=\"d-flex justify-space-between align-center\">\r\n      <div class=\"d-flex align-center\">\r\n        <router-link to=\"/\" class=\"d-flex align-center\">\r\n          <v-img class=\"logo-img mr-3\" src=\"/img/logo.png\" alt=\"logo\"></v-img>\r\n        </router-link>\r\n        <router-link to=\"/\" class=\"title-link\">\r\n          <v-title depressed class=\"title\">REPOSITÓRIO ACADÊMICO IF SUDESTE DE MINAS GERAIS - MURIAÉ</v-title>\r\n        </router-link>\r\n      </div>\r\n\r\n      <div class=\"d-flex align-center\">\r\n        <v-text-field\r\n          solo\r\n          flat\r\n          hide-details\r\n          prepend-inner-icon=\"mdi-magnify\"\r\n          label=\"PESQUISA RÁPIDA\"\r\n          class=\"search-input\"\r\n        ></v-text-field>\r\n        <v-divider vertical class=\"mx-4 divider-custom\"></v-divider>\r\n        <v-title depressed class=\"title-adm\">Sou administrador:</v-title>\r\n        <v-btn @click=\"toggleLoginForm\" class=\"login-btn ml-3\">ENTRAR</v-btn>\r\n      </div>\r\n    </v-container>\r\n  </v-app-bar>\r\n\r\n  <!-- Formulário de Login -->\r\n  <v-dialog v-model=\"loginFormVisible\" max-width=\"500px\">\r\n    <v-card>\r\n      <v-card-title class=\"text-center\">\r\n        <v-img class=\"logo-img mr-3\" src=\"/img/logo.png\" alt=\"logo\"></v-img>\r\n        <span class=\"headline\">ÁREA ADMINISTRATIVA</span>\r\n        <v-btn icon class=\"close-btn\" @click=\"loginFormVisible = false\">\r\n          <v-icon>mdi-close</v-icon>\r\n        </v-btn>\r\n      </v-card-title>\r\n      <v-card-text>\r\n        <v-form @submit.prevent=\"submitLogin\" v-model=\"valid\">\r\n          <v-text-field\r\n            label=\"E-mail\"\r\n            v-model=\"loginData.email\"\r\n            type=\"email\"\r\n            :rules=\"emailRules\"\r\n            required\r\n          ></v-text-field>\r\n          <v-text-field\r\n            label=\"Senha\"\r\n            v-model=\"loginData.password\"\r\n            type=\"password\"\r\n            :rules=\"passwordRules\"\r\n            required\r\n          ></v-text-field>\r\n        </v-form>\r\n      </v-card-text>\r\n      <v-card-actions class=\"d-flex justify-center\">\r\n        <v-btn color=\"#fff\" @click=\"submitLogin\" class=\"acess-btn\" :disabled=\"!valid\">Acessar</v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loginFormVisible: false, // Controla a visibilidade do formulário de login\r\n      valid: false, // Define a validação do formulário\r\n      loginData: {\r\n        email: \"\",\r\n        password: \"\"\r\n      },\r\n      // Regras de validação para os campos de e-mail e senha\r\n      emailRules: [\r\n        (v) => !!v || 'E-mail é obrigatório',\r\n        (v) => /.+@.+\\..+/.test(v) || 'E-mail inválido'\r\n      ],\r\n      passwordRules: [\r\n        (v) => !!v || 'Senha é obrigatória'\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    toggleLoginForm() {\r\n      // Alterna a visibilidade do formulário de login\r\n      this.loginFormVisible = !this.loginFormVisible;\r\n    },\r\n    async submitLogin() {\r\n      // Validar os campos do formulário\r\n      if (!this.valid) {\r\n        alert('Por favor, preencha todos os campos corretamente');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Enviar dados para o backend\r\n        const response = await axios.post('http://seu-backend-endpoint/login', this.loginData);\r\n\r\n        // Verificar a resposta do servidor\r\n        if (response.data.success) {\r\n          // Salvar o token ou dados do usuário, se necessário\r\n          localStorage.setItem('userToken', response.data.token);\r\n\r\n          // Redirecionar para a página de sucesso\r\n          this.$router.push({ name: 'TestePage' });\r\n\r\n          // Fechar o formulário de login\r\n          this.loginFormVisible = false;\r\n        } else {\r\n          alert('Credenciais inválidas!');\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro de login:', error);\r\n        alert('Erro ao conectar com o servidor!');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.v-app-bar {\r\n  background: #005f00;\r\n  padding: 10px 0;\r\n  border-top: 10px solid #00420c;\r\n}\r\n\r\n.title {\r\n  background-color: #00420c;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  font-weight: bold;\r\n  color: #fff;\r\n}\r\n\r\n.title-link {\r\n  text-decoration: none; /* Remove o sublinhado */\r\n}\r\n\r\n.logo-img {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.title-adm {\r\n  font-weight: bold;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.search-input {\r\n  max-width: 300px;\r\n  width: 300px;\r\n  border-radius: 10px;\r\n  padding: 5px 10px;\r\n  color: #fff;\r\n}\r\n\r\n.v-text-field__slot {\r\n  padding: 0px !important; /* Remove qualquer padding extra do Vuetify */\r\n}\r\n\r\n.divider-custom {\r\n  background-color: #fff;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.v-divider {\r\n  border-right: 3px solid #fff !important; /* Controla a espessura do divisor com border */\r\n}\r\n\r\n.login-btn {\r\n  background-color: #00420c;\r\n  color: #fff;\r\n  border-radius: 7px;\r\n  width: 120px;\r\n  height: 45px;\r\n}\r\n\r\n.login-btn:hover {\r\n  background-color: #001a05;\r\n}\r\n\r\n\r\n\r\n/* Estilo para o formulário de login */\r\n.text-center {\r\n  text-align: center;\r\n  color: #005f00;\r\n}\r\n\r\n.close-btn {\r\n  position: absolute;\r\n  top: -3px;\r\n  right: 25px;\r\n  width: 0px;\r\n  color: red;\r\n}\r\n\r\n.acess-btn {\r\n  width: 100%;\r\n  height: 45px;\r\n  border-radius: 5px;\r\n  font-weight: bold;\r\n  background-color: #00420c;\r\n}\r\n\r\n.acess-btn:hover {\r\n  background-color: #001a05;\r\n}\r\n\r\n</style>"],"mappings":";AAiEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,KAAK;MAAE;MACzBC,KAAK,EAAE,KAAK;MAAE;MACdC,SAAS,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACD;MACAC,UAAU,EAAE,CACTC,CAAC,IAAK,CAAC,CAACA,CAAA,IAAK,sBAAsB,EACnCA,CAAC,IAAK,WAAW,CAACC,IAAI,CAACD,CAAC,KAAK,iBAAgB,CAC/C;MACDE,aAAa,EAAE,CACZF,CAAC,IAAK,CAAC,CAACA,CAAA,IAAK,qBAAoB;IAEtC,CAAC;EACH,CAAC;EACDG,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MAChB;MACA,IAAI,CAACV,gBAAe,GAAI,CAAC,IAAI,CAACA,gBAAgB;IAChD,CAAC;IACD,MAAMW,WAAWA,CAAA,EAAG;MAClB;MACA,IAAI,CAAC,IAAI,CAACV,KAAK,EAAE;QACfW,KAAK,CAAC,kDAAkD,CAAC;QACzD;MACF;MAEA,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,mCAAmC,EAAE,IAAI,CAACZ,SAAS,CAAC;;QAEtF;QACA,IAAIW,QAAQ,CAACd,IAAI,CAACgB,OAAO,EAAE;UACzB;UACAC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,QAAQ,CAACd,IAAI,CAACmB,KAAK,CAAC;;UAEtD;UACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAY,CAAC,CAAC;;UAExC;UACA,IAAI,CAACrB,gBAAe,GAAI,KAAK;QAC/B,OAAO;UACLY,KAAK,CAAC,wBAAwB,CAAC;QACjC;MACF,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtCV,KAAK,CAAC,kCAAkC,CAAC;MAC3C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}