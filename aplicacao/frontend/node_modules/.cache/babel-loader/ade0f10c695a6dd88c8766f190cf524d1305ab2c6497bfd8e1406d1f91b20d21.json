{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted } from \"vue\";\nimport { useAutorStore } from \"../../store/autorStore\";\nimport { useObraStore } from \"../../store/obraStore\";\nimport { useRouter, useRoute } from \"vue-router\";\nexport default {\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const autorStore = useAutorStore();\n    const obraStore = useObraStore();\n    const results = ref([]);\n    const currentPage = ref(1);\n    const itemsPerPage = 10;\n\n    // Dados do filtro vindo da rota\n    const filterKey = ref(route.query.filterKey || null);\n    const selectedItem = ref(route.query.selectedItem || null);\n\n    // Função genérica para comparar valores\n    const compareValues = (fieldValue, selectedValue) => {\n      if (fieldValue === null || selectedValue === null) return false;\n      // Convertendo ambos os valores para string antes de comparar\n      return String(fieldValue).toLowerCase().trim() === String(selectedValue).toLowerCase().trim();\n    };\n\n    // Computed para filtrar os resultados\n    const filteredResults = computed(() => {\n      const allResults = results.value.map(obra => {\n        const autor = autorStore.autores.find(autor => autor.id_autor === obra.fk_id_autor);\n        const orientador = autorStore.autores.find(autor => autor.id_autor === obra.fk_id_orientador);\n        return {\n          ...obra,\n          author: autor ? autor.nome_autor : \"Autor desconhecido\",\n          orientador: orientador ? orientador.nome_autor : \"Orientador desconhecido\"\n        };\n      });\n\n      // Depuração: Verificando filtro e resultados antes de aplicar o filtro\n      console.log(\"Filtro aplicado:\", {\n        filterKey: filterKey.value,\n        selectedItem: selectedItem.value\n      });\n      console.log(\"Dados de Obras:\", allResults);\n\n      // Se não houver filtro, retornar todos os resultados\n      if (!filterKey.value || !selectedItem.value) {\n        return allResults;\n      }\n      const filtered = allResults.filter(obra => {\n        switch (filterKey.value) {\n          case \"Orientador\":\n            // Aqui estamos garantindo que o nome do orientador seja comparado corretamente\n            console.log(`Comparando ${obra.orientador} com ${selectedItem.value}`);\n            return compareValues(obra.orientador, selectedItem.value);\n          case \"Curso\":\n            return compareValues(obra.fk_id_curso, selectedItem.value);\n          case \"Título\":\n            return obra.titulo?.toLowerCase().trim().includes(selectedItem.value.toLowerCase().trim());\n          default:\n            return true;\n        }\n      });\n      return filtered;\n    });\n    const paginatedResults = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage;\n      const end = start + itemsPerPage;\n      return filteredResults.value.slice(start, end);\n    });\n    const totalPages = computed(() => {\n      return Math.ceil(filteredResults.value.length / itemsPerPage);\n    });\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n    };\n    const previousPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n    };\n\n    // Função de carregamento dos dados\n    const loadData = async () => {\n      try {\n        await Promise.all([obraStore.listarObras(), autorStore.listarAutores()]);\n        results.value = obraStore.obras;\n        console.log(\"Obras carregadas:\", results.value);\n        console.log(\"Filtro inicial:\", {\n          filterKey: filterKey.value,\n          selectedItem: selectedItem.value\n        });\n      } catch (error) {\n        console.error(\"Erro ao carregar dados:\", error);\n      }\n    };\n    const formatDate = dateString => {\n      if (!dateString) return \"\";\n      const date = new Date(dateString);\n      if (isNaN(date)) return \"\";\n      const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      };\n      return new Intl.DateTimeFormat(\"pt-BR\", options).format(date);\n    };\n    const goBack = () => {\n      router.push(\"/\");\n    };\n\n    // Carregamento dos dados quando o componente é montado\n    onMounted(loadData);\n    return {\n      results,\n      filteredResults,\n      paginatedResults,\n      currentPage,\n      totalPages,\n      nextPage,\n      previousPage,\n      formatDate,\n      goBack,\n      filterKey,\n      selectedItem\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useAutorStore","useObraStore","useRouter","useRoute","setup","router","route","autorStore","obraStore","results","currentPage","itemsPerPage","filterKey","query","selectedItem","compareValues","fieldValue","selectedValue","String","toLowerCase","trim","filteredResults","allResults","value","map","obra","autor","autores","find","id_autor","fk_id_autor","orientador","fk_id_orientador","author","nome_autor","console","log","filtered","filter","fk_id_curso","titulo","includes","paginatedResults","start","end","slice","totalPages","Math","ceil","length","nextPage","previousPage","loadData","Promise","all","listarObras","listarAutores","obras","error","formatDate","dateString","date","Date","isNaN","options","year","month","day","Intl","DateTimeFormat","format","goBack","push"],"sources":["C:\\Users\\Micro\\Music\\sistema_tcc\\aplicacao\\frontend\\src\\components\\lista\\ListaResultados.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row class=\"section-title\" justify=\"center\">\r\n      <v-col cols=\"12\" md=\"7\">\r\n        <h4 class=\"text-center\">RESULTADO DA BUSCA</h4>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <v-row justify=\"center\">\r\n      <v-col cols=\"12\" md=\"7\">\r\n        <v-card\r\n          v-for=\"(result, index) in paginatedResults\"\r\n          :key=\"index\"\r\n          class=\"mb-3 result-card\"\r\n        >\r\n          <v-card-text>\r\n            <h5 class=\"result-title\">\r\n              <router-link\r\n                :to=\"{ name: 'TccPage', params: { id_obra: result.id_obra } }\"\r\n                class=\"result-title\"\r\n              >\r\n                {{ result.titulo }}\r\n              </router-link>\r\n            </h5>\r\n            <p class=\"result-author\">\r\n              <strong>AUTOR(ES):</strong> {{ result.author }}\r\n            </p>\r\n            <p class=\"result-date\">\r\n              <strong>Data de Defesa:</strong> {{ formatDate(result.data_apresentacao) }}\r\n            </p>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <v-row justify=\"center\">\r\n      <v-col cols=\"auto\">\r\n        <v-btn\r\n          :disabled=\"currentPage === 1\"\r\n          @click=\"previousPage\"\r\n          class=\"mb-3 mr-2\"\r\n        >\r\n          Voltar\r\n        </v-btn>\r\n        <v-btn\r\n          :disabled=\"currentPage === totalPages\"\r\n          @click=\"nextPage\"\r\n          class=\"mb-3\"\r\n        >\r\n          Próximo\r\n        </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <v-row justify=\"center\">\r\n      <v-col cols=\"auto\">\r\n        <v-btn\r\n          @click=\"goBack\"\r\n          id=\"back-button\"\r\n          class=\"mb-3\"\r\n        >\r\n          Voltar para a tela principal\r\n        </v-btn>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { useAutorStore } from \"../../store/autorStore\";\r\nimport { useObraStore } from \"../../store/obraStore\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\n\r\nexport default {\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n\r\n    const autorStore = useAutorStore();\r\n    const obraStore = useObraStore();\r\n\r\n    const results = ref([]);\r\n    const currentPage = ref(1);\r\n    const itemsPerPage = 10;\r\n\r\n    // Dados do filtro vindo da rota\r\n    const filterKey = ref(route.query.filterKey || null);\r\n    const selectedItem = ref(route.query.selectedItem || null);\r\n\r\n    // Função genérica para comparar valores\r\n    const compareValues = (fieldValue, selectedValue) => {\r\n      if (fieldValue === null || selectedValue === null) return false;\r\n      // Convertendo ambos os valores para string antes de comparar\r\n      return String(fieldValue).toLowerCase().trim() === String(selectedValue).toLowerCase().trim();\r\n    };\r\n\r\n    // Computed para filtrar os resultados\r\n    const filteredResults = computed(() => {\r\n      const allResults = results.value.map((obra) => {\r\n        const autor = autorStore.autores.find(\r\n          (autor) => autor.id_autor === obra.fk_id_autor\r\n        );\r\n        const orientador = autorStore.autores.find(\r\n          (autor) => autor.id_autor === obra.fk_id_orientador\r\n        );\r\n        return {\r\n          ...obra,\r\n          author: autor ? autor.nome_autor : \"Autor desconhecido\",\r\n          orientador: orientador ? orientador.nome_autor : \"Orientador desconhecido\",\r\n        };\r\n      });\r\n\r\n      // Depuração: Verificando filtro e resultados antes de aplicar o filtro\r\n      console.log(\"Filtro aplicado:\", { filterKey: filterKey.value, selectedItem: selectedItem.value });\r\n      console.log(\"Dados de Obras:\", allResults);\r\n\r\n      // Se não houver filtro, retornar todos os resultados\r\n      if (!filterKey.value || !selectedItem.value) {\r\n        return allResults;\r\n      }\r\n\r\n      const filtered = allResults.filter((obra) => {\r\n        switch (filterKey.value) {\r\n          case \"Orientador\":\r\n            // Aqui estamos garantindo que o nome do orientador seja comparado corretamente\r\n            console.log(`Comparando ${obra.orientador} com ${selectedItem.value}`);\r\n            return compareValues(obra.orientador, selectedItem.value);\r\n          case \"Curso\":\r\n            return compareValues(obra.fk_id_curso, selectedItem.value);\r\n          case \"Título\":\r\n            return obra.titulo?.toLowerCase().trim().includes(selectedItem.value.toLowerCase().trim());\r\n          default:\r\n            return true;\r\n        }\r\n      });\r\n\r\n      return filtered;\r\n    });\r\n\r\n    const paginatedResults = computed(() => {\r\n      const start = (currentPage.value - 1) * itemsPerPage;\r\n      const end = start + itemsPerPage;\r\n      return filteredResults.value.slice(start, end);\r\n    });\r\n\r\n    const totalPages = computed(() => {\r\n      return Math.ceil(filteredResults.value.length / itemsPerPage);\r\n    });\r\n\r\n    const nextPage = () => {\r\n      if (currentPage.value < totalPages.value) {\r\n        currentPage.value++;\r\n      }\r\n    };\r\n\r\n    const previousPage = () => {\r\n      if (currentPage.value > 1) {\r\n        currentPage.value--;\r\n      }\r\n    };\r\n\r\n    // Função de carregamento dos dados\r\n    const loadData = async () => {\r\n      try {\r\n        await Promise.all([obraStore.listarObras(), autorStore.listarAutores()]);\r\n        results.value = obraStore.obras;\r\n        console.log(\"Obras carregadas:\", results.value);\r\n        console.log(\"Filtro inicial:\", { filterKey: filterKey.value, selectedItem: selectedItem.value });\r\n      } catch (error) {\r\n        console.error(\"Erro ao carregar dados:\", error);\r\n      }\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return \"\";\r\n      const date = new Date(dateString);\r\n      if (isNaN(date)) return \"\";\r\n      const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n      return new Intl.DateTimeFormat(\"pt-BR\", options).format(date);\r\n    };\r\n\r\n    const goBack = () => {\r\n      router.push(\"/\");\r\n    };\r\n\r\n    // Carregamento dos dados quando o componente é montado\r\n    onMounted(loadData);\r\n\r\n    return {\r\n      results,\r\n      filteredResults,\r\n      paginatedResults,\r\n      currentPage,\r\n      totalPages,\r\n      nextPage,\r\n      previousPage,\r\n      formatDate,\r\n      goBack,\r\n      filterKey,\r\n      selectedItem,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.section-title h4 {\r\n  margin-top: 50px;\r\n  background: linear-gradient(90deg, #00420c, #28a745);\r\n  color: white;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n}\r\n\r\n.result-card {\r\n  background-color: #f9f9f9;\r\n  border-radius: 10px;\r\n}\r\n\r\n.result-title {\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  color: #006dba;\r\n  margin: 0;\r\n}\r\n\r\n.result-author {\r\n  font-size: 14px;\r\n  margin: 5px 0;\r\n  color: #004b81;\r\n}\r\n\r\n.result-date {\r\n  font-size: 12px;\r\n  color: #8c92b1;\r\n  text-align: right;\r\n}\r\n\r\n/* Botões de navegação */\r\n.v-btn {\r\n  background-color: #00420c;\r\n  color: #fff;\r\n  border-radius: 7px;\r\n  font-weight: bold;\r\n  width: 150px;\r\n  height: 45px;\r\n  margin: 0 5px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.v-btn:hover {\r\n  background-color: #001a05;\r\n}\r\n\r\n.v-btn:disabled {\r\n  background-color: #8c8c8c;\r\n  color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n#back-button {\r\n  background-color: #00420c;\r\n  color: #fff;\r\n  border-radius: 7px;\r\n  font-weight: bold;\r\n  width: 300px;\r\n  height: 45px;\r\n  margin-top: 20px;\r\n}\r\n\r\n#back-button:hover {\r\n  background-color: #001a05;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}