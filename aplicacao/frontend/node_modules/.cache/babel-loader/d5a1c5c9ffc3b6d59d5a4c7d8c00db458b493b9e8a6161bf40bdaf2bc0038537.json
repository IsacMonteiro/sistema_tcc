{"ast":null,"code":"import { useAutorStore } from '../../store/autorStore'; // Caminho relativo\nimport { useObraStore } from '../../store/obra'; // Caminho relativo\n\nexport default {\n  data() {\n    return {\n      results: []\n    };\n  },\n  computed: {\n    autores() {\n      const autorStore = useAutorStore();\n      return autorStore.autores;\n    },\n    filteredResults() {\n      return this.results.map(obra => {\n        const autor = this.autores.find(autor => autor.id === obra.id_orientador || autor.id === obra.id_coorientador);\n        return {\n          ...obra,\n          author: autor ? autor.nome_autor : 'Autor desconhecido'\n        };\n      });\n    }\n  },\n  created() {\n    this.loadData();\n  },\n  methods: {\n    async loadData() {\n      const obraStore = useObraStore();\n      const autorStore = useAutorStore();\n      await Promise.all([obraStore.listarObras(), autorStore.listarAutores()]);\n      this.results = obraStore.obras;\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return new Intl.DateTimeFormat('pt-BR', options).format(date);\n    }\n  }\n};","map":{"version":3,"names":["useAutorStore","useObraStore","data","results","computed","autores","autorStore","filteredResults","map","obra","autor","find","id","id_orientador","id_coorientador","author","nome_autor","created","loadData","methods","obraStore","Promise","all","listarObras","listarAutores","obras","formatDate","dateString","date","Date","options","year","month","day","Intl","DateTimeFormat","format"],"sources":["C:\\Users\\Micro\\Music\\sistema_tcc\\aplicacao\\frontend\\src\\components\\lista\\ListaResultados.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row class=\"section-title\" justify=\"center\">\r\n      <v-col cols=\"12\" md=\"7\">\r\n        <h4 class=\"text-center\">RESULTADO DA BUSCA</h4>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <v-row justify=\"center\">\r\n      <v-col cols=\"12\" md=\"7\">\r\n        <v-card v-for=\"(result, index) in filteredResults\" :key=\"index\" class=\"mb-3 result-card\">\r\n          <v-card-text>\r\n            <h5 class=\"result-title\">{{ result.titulo }}</h5>\r\n            <p class=\"result-author\">\r\n              <strong>AUTOR(ES):</strong> {{ result.author }}\r\n            </p>\r\n            <p class=\"result-date\">{{ formatDate(result.data_publicacao) }}</p>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { useAutorStore } from '../../store/autorStore';  // Caminho relativo\r\nimport { useObraStore } from '../../store/obra';    // Caminho relativo\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      results: [],\r\n    };\r\n  },\r\n  computed: {\r\n    autores() {\r\n      const autorStore = useAutorStore();\r\n      return autorStore.autores;\r\n    },\r\n    filteredResults() {\r\n      return this.results.map((obra) => {\r\n        const autor = this.autores.find((autor) => autor.id === obra.id_orientador || autor.id === obra.id_coorientador);\r\n        return {\r\n          ...obra,\r\n          author: autor ? autor.nome_autor : 'Autor desconhecido',\r\n        };\r\n      });\r\n    },\r\n  },\r\n  created() {\r\n    this.loadData();\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      const obraStore = useObraStore();\r\n      const autorStore = useAutorStore();\r\n\r\n      await Promise.all([obraStore.listarObras(), autorStore.listarAutores()]);\r\n\r\n      this.results = obraStore.obras;\r\n    },\r\n    formatDate(dateString) {\r\n      const date = new Date(dateString);\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n      return new Intl.DateTimeFormat('pt-BR', options).format(date);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.section-title h4 {\r\n  margin-top: 50px;\r\n  background: linear-gradient(90deg, #00420c, #28a745);\r\n  color: white;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n}\r\n\r\n.result-card {\r\n  background-color: #f9f9f9;\r\n  border-radius: 10px;\r\n}\r\n\r\n.result-title {\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  color: #006dba;\r\n  margin: 0;\r\n}\r\n\r\n.result-author {\r\n  font-size: 14px;\r\n  margin: 5px 0;\r\n  color: #004b81;\r\n}\r\n\r\n.result-date {\r\n  font-size: 12px;\r\n  color: #8c92b1;\r\n  text-align: right;\r\n}\r\n</style>\r\n"],"mappings":"AAyBA,SAASA,aAAY,QAAS,wBAAwB,EAAG;AACzD,SAASC,YAAW,QAAS,kBAAkB,EAAK;;AAEpD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAOA,CAAA,EAAG;MACR,MAAMC,UAAS,GAAIN,aAAa,CAAC,CAAC;MAClC,OAAOM,UAAU,CAACD,OAAO;IAC3B,CAAC;IACDE,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACJ,OAAO,CAACK,GAAG,CAAEC,IAAI,IAAK;QAChC,MAAMC,KAAI,GAAI,IAAI,CAACL,OAAO,CAACM,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACE,EAAC,KAAMH,IAAI,CAACI,aAAY,IAAKH,KAAK,CAACE,EAAC,KAAMH,IAAI,CAACK,eAAe,CAAC;QAChH,OAAO;UACL,GAAGL,IAAI;UACPM,MAAM,EAAEL,KAAI,GAAIA,KAAK,CAACM,UAAS,GAAI;QACrC,CAAC;MACH,CAAC,CAAC;IACJ;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,CAAC,CAAC;EACjB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,QAAQA,CAAA,EAAG;MACf,MAAME,SAAQ,GAAInB,YAAY,CAAC,CAAC;MAChC,MAAMK,UAAS,GAAIN,aAAa,CAAC,CAAC;MAElC,MAAMqB,OAAO,CAACC,GAAG,CAAC,CAACF,SAAS,CAACG,WAAW,CAAC,CAAC,EAAEjB,UAAU,CAACkB,aAAa,CAAC,CAAC,CAAC,CAAC;MAExE,IAAI,CAACrB,OAAM,GAAIiB,SAAS,CAACK,KAAK;IAChC,CAAC;IACDC,UAAUA,CAACC,UAAU,EAAE;MACrB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACjC,MAAMG,OAAM,GAAI;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAU,CAAC;MAClE,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEL,OAAO,CAAC,CAACM,MAAM,CAACR,IAAI,CAAC;IAC/D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}