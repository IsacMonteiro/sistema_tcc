{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted } from 'vue'; // Importando ref, computed, e onMounted\nimport { useAutorStore } from '../../store/autorStore';\nimport { useObraStore } from '../../store/obraStore';\nimport { useRouter } from 'vue-router'; // Importando useRouter\n\nexport default {\n  setup() {\n    const router = useRouter();\n    const autorStore = useAutorStore();\n    const obraStore = useObraStore();\n    const results = ref([]);\n    const filteredResults = computed(() => {\n      return results.value.map(obra => {\n        const autor = autorStore.autores.find(autor => autor.id === obra.id_orientador || autor.id === obra.id_coorientador);\n        return {\n          ...obra,\n          author: autor ? autor.nome_autor : 'Autor desconhecido'\n        };\n      });\n    });\n\n    // Função para carregar os dados\n    const loadData = async () => {\n      await Promise.all([obraStore.listarObras(), autorStore.listarAutores()]);\n      results.value = obraStore.obras; // Popula a lista de resultados com as obras\n    };\n\n    // Função para formatar a data\n    const formatDate = dateString => {\n      if (!dateString) {\n        return ''; // Retorna uma string vazia se não houver data\n      }\n      const date = new Date(dateString);\n      if (isNaN(date)) {\n        return ''; // Retorna uma string vazia se a data for inválida\n      }\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      const formattedDate = new Intl.DateTimeFormat('pt-BR', options).format(date); // Formato dd de mês de yyyy\n      return formattedDate;\n    };\n\n    // Função para voltar à tela principal\n    const goBack = () => {\n      router.push('/');\n    };\n\n    // Carregar os dados ao criar o componente\n    onMounted(loadData);\n    return {\n      results,\n      filteredResults,\n      formatDate,\n      goBack\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useAutorStore","useObraStore","useRouter","setup","router","autorStore","obraStore","results","filteredResults","value","map","obra","autor","autores","find","id","id_orientador","id_coorientador","author","nome_autor","loadData","Promise","all","listarObras","listarAutores","obras","formatDate","dateString","date","Date","isNaN","options","year","month","day","formattedDate","Intl","DateTimeFormat","format","goBack","push"],"sources":["C:\\Users\\Micro\\Music\\sistema_tcc\\aplicacao\\frontend\\src\\components\\lista\\ListaResultados.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row class=\"section-title\" justify=\"center\">\r\n      <v-col cols=\"12\" md=\"7\">\r\n        <h4 class=\"text-center\">RESULTADO DA BUSCA</h4>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <v-row justify=\"center\">\r\n      <v-col cols=\"12\" md=\"7\">\r\n        <v-card v-for=\"(result, index) in filteredResults\" :key=\"index\" class=\"mb-3 result-card\">\r\n          <v-card-text>\r\n            <!-- Título da obra como link clicável -->\r\n            <router-link :to=\"{ name: 'TccPage', params: { id_obra: result.id } }\" class=\"result-title\">\r\n              {{ result.titulo }}\r\n            </router-link>\r\n            <p class=\"result-author\">\r\n              <strong>AUTOR(ES):</strong> {{ result.author }}\r\n            </p>\r\n            <p class=\"result-date\">{{ formatDate(result.data_apresentacao) }}</p>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <!-- Botão para voltar à tela principal -->\r\n    <v-row justify=\"center\">\r\n      <v-col cols=\"auto\">\r\n        <v-btn @click=\"goBack\" id=\"back-button\" class=\"mb-3\">Voltar para a tela principal</v-btn>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue';  // Importando ref, computed, e onMounted\r\nimport { useAutorStore } from '../../store/autorStore';\r\nimport { useObraStore } from '../../store/obraStore';\r\nimport { useRouter } from 'vue-router'; // Importando useRouter\r\n\r\nexport default {\r\n  setup() {\r\n    const router = useRouter();\r\n    \r\n    const autorStore = useAutorStore();\r\n    const obraStore = useObraStore();\r\n    \r\n    const results = ref([]);\r\n\r\n    const filteredResults = computed(() => {\r\n      return results.value.map((obra) => {\r\n        const autor = autorStore.autores.find(\r\n          (autor) => autor.id === obra.id_orientador || autor.id === obra.id_coorientador\r\n        );\r\n        return {\r\n          ...obra,\r\n          author: autor ? autor.nome_autor : 'Autor desconhecido',\r\n        };\r\n      });\r\n    });\r\n\r\n    // Função para carregar os dados\r\n    const loadData = async () => {\r\n      await Promise.all([obraStore.listarObras(), autorStore.listarAutores()]);\r\n      results.value = obraStore.obras; // Popula a lista de resultados com as obras\r\n    };\r\n\r\n    // Função para formatar a data\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) {\r\n        return ''; // Retorna uma string vazia se não houver data\r\n      }\r\n      const date = new Date(dateString);\r\n      if (isNaN(date)) {\r\n        return ''; // Retorna uma string vazia se a data for inválida\r\n      }\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n      const formattedDate = new Intl.DateTimeFormat('pt-BR', options).format(date); // Formato dd de mês de yyyy\r\n      return formattedDate;\r\n    };\r\n\r\n    // Função para voltar à tela principal\r\n    const goBack = () => {\r\n      router.push('/');\r\n    };\r\n\r\n    // Carregar os dados ao criar o componente\r\n    onMounted(loadData);\r\n\r\n    return {\r\n      results,\r\n      filteredResults,\r\n      formatDate,\r\n      goBack,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.section-title h4 {\r\n  margin-top: 50px;\r\n  background: linear-gradient(90deg, #00420c, #28a745);\r\n  color: white;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n}\r\n\r\n.result-card {\r\n  background-color: #f9f9f9;\r\n  border-radius: 10px;\r\n}\r\n\r\n.result-title {\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  color: #006dba;\r\n  margin: 0;\r\n  text-decoration: none; /* Remover sublinhado */\r\n}\r\n\r\n.result-title:hover {\r\n  text-decoration: underline; /* Adicionar sublinhado ao passar o mouse */\r\n}\r\n\r\n.result-author {\r\n  font-size: 14px;\r\n  margin: 5px 0;\r\n  color: #004b81;\r\n}\r\n\r\n.result-date {\r\n  font-size: 12px;\r\n  color: #8c92b1;\r\n  text-align: right;\r\n}\r\n\r\n#back-button{\r\n  background-color: #00420c;\r\n  color: #fff;\r\n  border-radius: 7px;\r\n  font-weight: bold;\r\n  width: 300px;\r\n  height: 45px;\r\n}\r\n\r\n#back-button:hover {\r\n  background-color: #001a05;\r\n}\r\n</style>"],"mappings":";AAmCA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK,EAAG;AACjD,SAASC,aAAY,QAAS,wBAAwB;AACtD,SAASC,YAAW,QAAS,uBAAuB;AACpD,SAASC,SAAQ,QAAS,YAAY,EAAE;;AAExC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIF,SAAS,CAAC,CAAC;IAE1B,MAAMG,UAAS,GAAIL,aAAa,CAAC,CAAC;IAClC,MAAMM,SAAQ,GAAIL,YAAY,CAAC,CAAC;IAEhC,MAAMM,OAAM,GAAIV,GAAG,CAAC,EAAE,CAAC;IAEvB,MAAMW,eAAc,GAAIV,QAAQ,CAAC,MAAM;MACrC,OAAOS,OAAO,CAACE,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAK;QACjC,MAAMC,KAAI,GAAIP,UAAU,CAACQ,OAAO,CAACC,IAAI,CAClCF,KAAK,IAAKA,KAAK,CAACG,EAAC,KAAMJ,IAAI,CAACK,aAAY,IAAKJ,KAAK,CAACG,EAAC,KAAMJ,IAAI,CAACM,eAClE,CAAC;QACD,OAAO;UACL,GAAGN,IAAI;UACPO,MAAM,EAAEN,KAAI,GAAIA,KAAK,CAACO,UAAS,GAAI;QACrC,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAMC,QAAO,GAAI,MAAAA,CAAA,KAAY;MAC3B,MAAMC,OAAO,CAACC,GAAG,CAAC,CAAChB,SAAS,CAACiB,WAAW,CAAC,CAAC,EAAElB,UAAU,CAACmB,aAAa,CAAC,CAAC,CAAC,CAAC;MACxEjB,OAAO,CAACE,KAAI,GAAIH,SAAS,CAACmB,KAAK,EAAE;IACnC,CAAC;;IAED;IACA,MAAMC,UAAS,GAAKC,UAAU,IAAK;MACjC,IAAI,CAACA,UAAU,EAAE;QACf,OAAO,EAAE,EAAE;MACb;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACjC,IAAIG,KAAK,CAACF,IAAI,CAAC,EAAE;QACf,OAAO,EAAE,EAAE;MACb;MACA,MAAMG,OAAM,GAAI;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAU,CAAC;MAClE,MAAMC,aAAY,GAAI,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEN,OAAO,CAAC,CAACO,MAAM,CAACV,IAAI,CAAC,EAAE;MAC9E,OAAOO,aAAa;IACtB,CAAC;;IAED;IACA,MAAMI,MAAK,GAAIA,CAAA,KAAM;MACnBnC,MAAM,CAACoC,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;;IAED;IACAzC,SAAS,CAACqB,QAAQ,CAAC;IAEnB,OAAO;MACLb,OAAO;MACPC,eAAe;MACfkB,UAAU;MACVa;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}