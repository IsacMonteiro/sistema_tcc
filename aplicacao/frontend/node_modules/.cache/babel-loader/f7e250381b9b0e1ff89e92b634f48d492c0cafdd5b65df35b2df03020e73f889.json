{"ast":null,"code":"import { useAutorStore } from \"../../store/autorStore\"; // Ajuste conforme o caminho correto\nimport { onMounted, ref } from \"vue\";\nexport default {\n  setup() {\n    const autorStore = useAutorStore();\n    const autores = ref([]); // Criando a referência reativa para a lista de autores\n    const buttons = [\"Autor\", \"Assunto\", \"Áreas de Conhecimento - Cursos\", \"Data de Defesa\", \"Orientador\", \"Tipo de Documento\"];\n    const dropdowns = ref([false, false, false, false, false, false]); // Estado das listas suspensas\n    const dropdownOptions = [[],\n    // Opções para autores (preenchido dinamicamente)\n    [\"Assunto 1\", \"Assunto 2\", \"Assunto 3\"], [\"ADMINISTRAÇÃO\", \"CIÊNCIAS AMBIENTAIS\", \"DESIGNER DE MODA\", \"GESTÃO EM TECNOLOGIA DA INFORMAÇÃO\"], [\"2020\", \"2021\", \"2022\"], [\"Orientador 1\", \"Orientador 2\", \"Orientador 3\"], [\"TCC\"]];\n\n    // Carrega os autores quando o componente é montado\n    onMounted(async () => {\n      try {\n        await autorStore.listarAutores(); // Chama o método para buscar autores\n        autores.value = autorStore.autores; // Atualiza a lista de autores\n        console.log(\"Autores carregados:\", autores.value); // Verifica se os autores foram carregados\n      } catch (error) {\n        console.error(\"Erro ao carregar autores:\", error);\n      }\n    });\n\n    // Método para alternar o estado de cada dropdown\n    const toggleDropdown = index => {\n      dropdowns.value[index] = !dropdowns.value[index];\n    };\n    return {\n      autores,\n      // Lista de autores\n      buttons,\n      dropdowns,\n      dropdownOptions,\n      toggleDropdown\n    };\n  }\n};","map":{"version":3,"names":["useAutorStore","onMounted","ref","setup","autorStore","autores","buttons","dropdowns","dropdownOptions","listarAutores","value","console","log","error","toggleDropdown","index"],"sources":["C:\\Users\\Micro\\Music\\sistema_tcc\\aplicacao\\frontend\\src\\components\\lista\\ListaSuspensa.vue"],"sourcesContent":["<template>\r\n  <v-container class=\"d-flex flex-column align-center gap-4\">\r\n    <!-- Botões com Lista Suspensa -->\r\n    <v-row class=\"button-container\" justify=\"center\" align=\"center\">\r\n      <v-col\r\n        v-for=\"(item, index) in buttons\"\r\n        :key=\"index\"\r\n        cols=\"12\"\r\n        md=\"4\"\r\n        class=\"mb-4\"\r\n      >\r\n        <!-- Botão Principal -->\r\n        <v-btn\r\n          class=\"filter-button\"\r\n          elevation=\"2\"\r\n          dark\r\n          block\r\n          @click=\"toggleDropdown(index)\"\r\n        >\r\n          <!-- Ícone à Esquerda -->\r\n          <v-icon class=\"me-2\">\r\n            {{ dropdowns[index] ? 'mdi-minus' : 'mdi-plus' }}\r\n          </v-icon>\r\n          <span>{{ item }}</span>\r\n        </v-btn>\r\n\r\n        <!-- Lista Suspensa -->\r\n        <v-expand-transition>\r\n          <div v-if=\"dropdowns[index]\" class=\"dropdown-list\">\r\n            <!-- Conteúdo da Lista -->\r\n            <ul v-if=\"index === 0\"> <!-- Só renderiza a lista de autores no primeiro dropdown -->\r\n              <li v-for=\"autor in autores\" :key=\"autor.id_autor\">\r\n                {{ autor.nome_autor }} <!-- Exibe o nome do autor -->\r\n              </li>\r\n            </ul>\r\n            <!-- Outras opções para os outros botões -->\r\n            <ul v-else>\r\n              <li v-for=\"(option, idx) in dropdownOptions[index]\" :key=\"idx\">\r\n                {{ option }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </v-expand-transition>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { useAutorStore } from \"../../store/autorStore\"; // Ajuste conforme o caminho correto\r\nimport { onMounted, ref } from \"vue\";\r\n\r\nexport default {\r\n  setup() {\r\n    const autorStore = useAutorStore();\r\n    const autores = ref([]); // Criando a referência reativa para a lista de autores\r\n    const buttons = [\r\n      \"Autor\",\r\n      \"Assunto\",\r\n      \"Áreas de Conhecimento - Cursos\",\r\n      \"Data de Defesa\",\r\n      \"Orientador\",\r\n      \"Tipo de Documento\",\r\n    ];\r\n    const dropdowns = ref([false, false, false, false, false, false]); // Estado das listas suspensas\r\n    const dropdownOptions = [\r\n      [], // Opções para autores (preenchido dinamicamente)\r\n      [\"Assunto 1\", \"Assunto 2\", \"Assunto 3\"],\r\n      [\"ADMINISTRAÇÃO\", \"CIÊNCIAS AMBIENTAIS\", \"DESIGNER DE MODA\", \"GESTÃO EM TECNOLOGIA DA INFORMAÇÃO\"],\r\n      [\"2020\", \"2021\", \"2022\"],\r\n      [\"Orientador 1\", \"Orientador 2\", \"Orientador 3\"],\r\n      [\"TCC\"],\r\n    ];\r\n\r\n    // Carrega os autores quando o componente é montado\r\n    onMounted(async () => {\r\n      try {\r\n        await autorStore.listarAutores(); // Chama o método para buscar autores\r\n        autores.value = autorStore.autores; // Atualiza a lista de autores\r\n        console.log(\"Autores carregados:\", autores.value); // Verifica se os autores foram carregados\r\n      } catch (error) {\r\n        console.error(\"Erro ao carregar autores:\", error);\r\n      }\r\n    });\r\n\r\n    // Método para alternar o estado de cada dropdown\r\n    const toggleDropdown = (index) => {\r\n      dropdowns.value[index] = !dropdowns.value[index];\r\n    };\r\n\r\n    return {\r\n      autores, // Lista de autores\r\n      buttons,\r\n      dropdowns,\r\n      dropdownOptions,\r\n      toggleDropdown,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.button-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n/* Estilo dos botões */\r\n.filter-button {\r\n  width: 100%;\r\n  background-color: #00420c;\r\n  color: #fff;\r\n  height: 50px;\r\n  text-transform: none;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding: 0 16px;\r\n}\r\n\r\n/* Hover: botão muda de cor ao passar o mouse */\r\n.filter-button:hover {\r\n  background-color: #001a05;\r\n}\r\n\r\n/* Lista Suspensa */\r\n.dropdown-list {\r\n  background: #e0f2f1; /* Fundo da lista */\r\n  border-radius: 8px;\r\n  padding: 8px 16px;\r\n  margin-top: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* Estilo dos itens na lista */\r\n.dropdown-list ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.dropdown-list li {\r\n  font-size: 14px;\r\n  margin-bottom: 4px;\r\n  color: #004d40;\r\n}\r\n\r\n.dropdown-list li:last-child {\r\n  margin-bottom: 0;\r\n}\r\n</style>"],"mappings":"AAiDA,SAASA,aAAY,QAAS,wBAAwB,EAAE;AACxD,SAASC,SAAS,EAAEC,GAAE,QAAS,KAAK;AAEpC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIJ,aAAa,CAAC,CAAC;IAClC,MAAMK,OAAM,GAAIH,GAAG,CAAC,EAAE,CAAC,EAAE;IACzB,MAAMI,OAAM,GAAI,CACd,OAAO,EACP,SAAS,EACT,gCAAgC,EAChC,gBAAgB,EAChB,YAAY,EACZ,mBAAmB,CACpB;IACD,MAAMC,SAAQ,GAAIL,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,EAAE;IACnE,MAAMM,eAAc,GAAI,CACtB,EAAE;IAAE;IACJ,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,EACvC,CAAC,eAAe,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,oCAAoC,CAAC,EAClG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EACxB,CAAC,cAAc,EAAE,cAAc,EAAE,cAAc,CAAC,EAChD,CAAC,KAAK,CAAC,CACR;;IAED;IACAP,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMG,UAAU,CAACK,aAAa,CAAC,CAAC,EAAE;QAClCJ,OAAO,CAACK,KAAI,GAAIN,UAAU,CAACC,OAAO,EAAE;QACpCM,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEP,OAAO,CAACK,KAAK,CAAC,EAAE;MACrD,EAAE,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,cAAa,GAAKC,KAAK,IAAK;MAChCR,SAAS,CAACG,KAAK,CAACK,KAAK,IAAI,CAACR,SAAS,CAACG,KAAK,CAACK,KAAK,CAAC;IAClD,CAAC;IAED,OAAO;MACLV,OAAO;MAAE;MACTC,OAAO;MACPC,SAAS;MACTC,eAAe;MACfM;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}