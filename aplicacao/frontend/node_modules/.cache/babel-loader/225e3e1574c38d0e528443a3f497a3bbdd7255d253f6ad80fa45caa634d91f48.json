{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useAutorStore = defineStore('autor', {\n  state: () => ({\n    autores: []\n  }),\n  actions: {\n    async listarAutores() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/autor');\n        this.autores = response.data;\n      } catch (error) {\n        console.error('Erro ao listar autores:', error);\n      }\n    },\n    async cadastrarAutor(matricula_autor, nome_autor, email_autor) {\n      try {\n        const novoAutor = {\n          matricula_autor,\n          nome_autor,\n          email_autor\n        };\n        const response = await axios.post('http://localhost:3000/api/autor', novoAutor);\n        this.autores.push(response.data.result);\n        return {\n          message: 'Autor cadastrado com sucesso!'\n        };\n      } catch (error) {\n        console.error('Erro ao cadastrar autor:', error.response?.data || error.message);\n        throw error;\n      }\n    },\n    async excluirAutor(id_autor) {\n      try {\n        await axios.delete(`http://localhost:3000/api/autor/${id_autor}`);\n        // Atualiza o estado removendo o autor da lista\n        this.autores = this.autores.filter(autor => autor.id !== id_autor);\n      } catch (error) {\n        console.error('Erro ao excluir autor:', error);\n      }\n    },\n    async editarAutor(id_autor, matricula_autor, nome_autor, email_autor) {\n      try {\n        const autorAtualizado = {\n          matricula_autor,\n          nome_autor,\n          email_autor\n        };\n        const response = await axios.put(`http://localhost:3000/api/autor/${id_autor}`, autorAtualizado);\n        // Atualiza o autor no estado\n        this.autores = this.autores.map(autor => autor.id === id_autor ? {\n          ...autor,\n          ...autorAtualizado\n        } : autor);\n        return response;\n      } catch (error) {\n        console.error('Erro ao editar autor:', error.response?.data || error.message);\n        throw error;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useAutorStore","state","autores","actions","listarAutores","response","get","data","error","console","cadastrarAutor","matricula_autor","nome_autor","email_autor","novoAutor","post","push","result","message","excluirAutor","id_autor","delete","filter","autor","id","editarAutor","autorAtualizado","put","map"],"sources":["C:/Users/Micro/Music/sistema_tcc/aplicacao/frontend/src/store/autorStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport axios from 'axios';\r\n\r\nexport const useAutorStore = defineStore('autor', {\r\n  state: () => ({\r\n    autores: [],\r\n  }),\r\n  actions: {\r\n    async listarAutores() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/autor');\r\n        this.autores = response.data;\r\n      } catch (error) {\r\n        console.error('Erro ao listar autores:', error);\r\n      }\r\n    },\r\n    async cadastrarAutor(matricula_autor, nome_autor, email_autor) {\r\n      try {\r\n        const novoAutor = { matricula_autor, nome_autor, email_autor };\r\n        const response = await axios.post('http://localhost:3000/api/autor', novoAutor);\r\n        this.autores.push(response.data.result);\r\n        return { message: 'Autor cadastrado com sucesso!' };\r\n      } catch (error) {\r\n        console.error('Erro ao cadastrar autor:', error.response?.data || error.message);\r\n        throw error;\r\n      }\r\n    },\r\n    async excluirAutor(id_autor) {\r\n      try {\r\n        await axios.delete(`http://localhost:3000/api/autor/${id_autor}`);\r\n        // Atualiza o estado removendo o autor da lista\r\n        this.autores = this.autores.filter(autor => autor.id !== id_autor);\r\n      } catch (error) {\r\n        console.error('Erro ao excluir autor:', error);\r\n      }\r\n    },\r\n    async editarAutor(id_autor, matricula_autor, nome_autor, email_autor) {\r\n      try {\r\n        const autorAtualizado = { matricula_autor, nome_autor, email_autor };\r\n        const response = await axios.put(`http://localhost:3000/api/autor/${id_autor}`, autorAtualizado);\r\n        // Atualiza o autor no estado\r\n        this.autores = this.autores.map(autor =>\r\n          autor.id === id_autor ? { ...autor, ...autorAtualizado } : autor\r\n        );\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Erro ao editar autor:', error.response?.data || error.message);\r\n        throw error;\r\n      }\r\n    },\r\n  },\r\n});"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAGF,WAAW,CAAC,OAAO,EAAE;EAChDG,KAAK,EAAEA,CAAA,MAAO;IACZC,OAAO,EAAE;EACX,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,iCAAiC,CAAC;QACnE,IAAI,CAACJ,OAAO,GAAGG,QAAQ,CAACE,IAAI;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACD,MAAME,cAAcA,CAACC,eAAe,EAAEC,UAAU,EAAEC,WAAW,EAAE;MAC7D,IAAI;QACF,MAAMC,SAAS,GAAG;UAAEH,eAAe;UAAEC,UAAU;UAAEC;QAAY,CAAC;QAC9D,MAAMR,QAAQ,GAAG,MAAMN,KAAK,CAACgB,IAAI,CAAC,iCAAiC,EAAED,SAAS,CAAC;QAC/E,IAAI,CAACZ,OAAO,CAACc,IAAI,CAACX,QAAQ,CAACE,IAAI,CAACU,MAAM,CAAC;QACvC,OAAO;UAAEC,OAAO,EAAE;QAAgC,CAAC;MACrD,CAAC,CAAC,OAAOV,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACH,QAAQ,EAAEE,IAAI,IAAIC,KAAK,CAACU,OAAO,CAAC;QAChF,MAAMV,KAAK;MACb;IACF,CAAC;IACD,MAAMW,YAAYA,CAACC,QAAQ,EAAE;MAC3B,IAAI;QACF,MAAMrB,KAAK,CAACsB,MAAM,CAAC,mCAAmCD,QAAQ,EAAE,CAAC;QACjE;QACA,IAAI,CAAClB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACoB,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKJ,QAAQ,CAAC;MACpE,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACD,MAAMiB,WAAWA,CAACL,QAAQ,EAAET,eAAe,EAAEC,UAAU,EAAEC,WAAW,EAAE;MACpE,IAAI;QACF,MAAMa,eAAe,GAAG;UAAEf,eAAe;UAAEC,UAAU;UAAEC;QAAY,CAAC;QACpE,MAAMR,QAAQ,GAAG,MAAMN,KAAK,CAAC4B,GAAG,CAAC,mCAAmCP,QAAQ,EAAE,EAAEM,eAAe,CAAC;QAChG;QACA,IAAI,CAACxB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC0B,GAAG,CAACL,KAAK,IACnCA,KAAK,CAACC,EAAE,KAAKJ,QAAQ,GAAG;UAAE,GAAGG,KAAK;UAAE,GAAGG;QAAgB,CAAC,GAAGH,KAC7D,CAAC;QACD,OAAOlB,QAAQ;MACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACH,QAAQ,EAAEE,IAAI,IAAIC,KAAK,CAACU,OAAO,CAAC;QAC7E,MAAMV,KAAK;MACb;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}