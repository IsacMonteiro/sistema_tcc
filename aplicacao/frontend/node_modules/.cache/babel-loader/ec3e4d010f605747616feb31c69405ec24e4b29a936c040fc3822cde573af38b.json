{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useObraStore = defineStore('obra', {\n  state: () => ({\n    obras: []\n  }),\n  actions: {\n    async listarObras() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/obra');\n        this.obras = response.data;\n      } catch (error) {\n        console.error('Erro ao listar obras:', error);\n      }\n    },\n    async cadastrarObra(titulo, resumo, palavras_chave, data_publicacao, tipo, status, id_orientador, id_coorientador, id_curso) {\n      try {\n        const novaObra = {\n          titulo,\n          resumo,\n          palavras_chave,\n          data_publicacao,\n          tipo,\n          status,\n          id_orientador,\n          id_coorientador,\n          id_curso\n        };\n        const response = await axios.post('http://localhost:3000/api/obra', novaObra);\n        this.obras.push(response.data.result);\n        return {\n          message: 'Obra cadastrada com sucesso!'\n        };\n      } catch (error) {\n        console.error('Erro ao cadastrar obra:', error.response?.data || error.message);\n        throw error;\n      }\n    },\n    async excluirObra(id_obra) {\n      try {\n        await axios.delete(`http://localhost:3000/api/obra/${id_obra}`);\n        await this.listarObras();\n      } catch (error) {\n        console.error('Erro ao excluir obra:', error);\n      }\n    },\n    async editarObra(id_obra, titulo, resumo, palavras_chave, data_publicacao, tipo, status, id_orientador, id_coorientador, id_curso) {\n      try {\n        const obraAtualizada = {\n          titulo,\n          resumo,\n          palavras_chave,\n          data_publicacao,\n          tipo,\n          status,\n          id_orientador,\n          id_coorientador,\n          id_curso\n        };\n        const response = await axios.put(`http://localhost:3000/api/obra/${id_obra}`, obraAtualizada);\n        await this.listarObras();\n        return response;\n      } catch (error) {\n        console.error('Erro ao editar obra:', error.response?.data || error.message);\n        throw error;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useObraStore","state","obras","actions","listarObras","response","get","data","error","console","cadastrarObra","titulo","resumo","palavras_chave","data_publicacao","tipo","status","id_orientador","id_coorientador","id_curso","novaObra","post","push","result","message","excluirObra","id_obra","delete","editarObra","obraAtualizada","put"],"sources":["C:/Users/Micro/Music/sistema_tcc/aplicacao/frontend/src/store/obraStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport axios from 'axios';\r\n\r\nexport const useObraStore = defineStore('obra', {\r\n  state: () => ({\r\n    obras: [],\r\n  }),\r\n  actions: {\r\n    async listarObras() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/obra');\r\n        this.obras = response.data;\r\n      } catch (error) {\r\n        console.error('Erro ao listar obras:', error);\r\n      }\r\n    },\r\n    async cadastrarObra(titulo, resumo, palavras_chave, data_publicacao, tipo, status, id_orientador, id_coorientador, id_curso) {\r\n      try {\r\n        const novaObra = { titulo, resumo, palavras_chave, data_publicacao, tipo, status, id_orientador, id_coorientador, id_curso };\r\n        const response = await axios.post('http://localhost:3000/api/obra', novaObra);\r\n        this.obras.push(response.data.result);\r\n        return { message: 'Obra cadastrada com sucesso!' };\r\n      } catch (error) {\r\n        console.error('Erro ao cadastrar obra:', error.response?.data || error.message);\r\n        throw error;\r\n      }\r\n    },\r\n    async excluirObra(id_obra) {\r\n      try {\r\n        await axios.delete(`http://localhost:3000/api/obra/${id_obra}`);\r\n        await this.listarObras();\r\n      } catch (error) {\r\n        console.error('Erro ao excluir obra:', error);\r\n      }\r\n    },\r\n    async editarObra(id_obra , titulo, resumo, palavras_chave, data_publicacao, tipo, status, id_orientador, id_coorientador, id_curso) {\r\n      try {\r\n        const obraAtualizada = { titulo, resumo, palavras_chave, data_publicacao, tipo, status, id_orientador, id_coorientador, id_curso };\r\n        const response = await axios.put(`http://localhost:3000/api/obra/${id_obra}`, obraAtualizada);\r\n        await this.listarObras();\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Erro ao editar obra:', error.response?.data || error.message);\r\n        throw error;\r\n      }\r\n    },\r\n  },\r\n});"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC,MAAM,EAAE;EAC9CG,KAAK,EAAEA,CAAA,MAAO;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,gCAAgC,CAAC;QAClE,IAAI,CAACJ,KAAK,GAAGG,QAAQ,CAACE,IAAI;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAME,aAAaA,CAACC,MAAM,EAAEC,MAAM,EAAEC,cAAc,EAAEC,eAAe,EAAEC,IAAI,EAAEC,MAAM,EAAEC,aAAa,EAAEC,eAAe,EAAEC,QAAQ,EAAE;MAC3H,IAAI;QACF,MAAMC,QAAQ,GAAG;UAAET,MAAM;UAAEC,MAAM;UAAEC,cAAc;UAAEC,eAAe;UAAEC,IAAI;UAAEC,MAAM;UAAEC,aAAa;UAAEC,eAAe;UAAEC;QAAS,CAAC;QAC5H,MAAMd,QAAQ,GAAG,MAAMN,KAAK,CAACsB,IAAI,CAAC,gCAAgC,EAAED,QAAQ,CAAC;QAC7E,IAAI,CAAClB,KAAK,CAACoB,IAAI,CAACjB,QAAQ,CAACE,IAAI,CAACgB,MAAM,CAAC;QACrC,OAAO;UAAEC,OAAO,EAAE;QAA+B,CAAC;MACpD,CAAC,CAAC,OAAOhB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACH,QAAQ,EAAEE,IAAI,IAAIC,KAAK,CAACgB,OAAO,CAAC;QAC/E,MAAMhB,KAAK;MACb;IACF,CAAC;IACD,MAAMiB,WAAWA,CAACC,OAAO,EAAE;MACzB,IAAI;QACF,MAAM3B,KAAK,CAAC4B,MAAM,CAAC,kCAAkCD,OAAO,EAAE,CAAC;QAC/D,MAAM,IAAI,CAACtB,WAAW,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAMoB,UAAUA,CAACF,OAAO,EAAGf,MAAM,EAAEC,MAAM,EAAEC,cAAc,EAAEC,eAAe,EAAEC,IAAI,EAAEC,MAAM,EAAEC,aAAa,EAAEC,eAAe,EAAEC,QAAQ,EAAE;MAClI,IAAI;QACF,MAAMU,cAAc,GAAG;UAAElB,MAAM;UAAEC,MAAM;UAAEC,cAAc;UAAEC,eAAe;UAAEC,IAAI;UAAEC,MAAM;UAAEC,aAAa;UAAEC,eAAe;UAAEC;QAAS,CAAC;QAClI,MAAMd,QAAQ,GAAG,MAAMN,KAAK,CAAC+B,GAAG,CAAC,kCAAkCJ,OAAO,EAAE,EAAEG,cAAc,CAAC;QAC7F,MAAM,IAAI,CAACzB,WAAW,CAAC,CAAC;QACxB,OAAOC,QAAQ;MACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACH,QAAQ,EAAEE,IAAI,IAAIC,KAAK,CAACgB,OAAO,CAAC;QAC5E,MAAMhB,KAAK;MACb;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}